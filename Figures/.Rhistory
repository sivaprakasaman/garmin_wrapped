source("~/Documents/Code/garmin_wrapped/Analysis/R/plotPathbyState.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/plotPathbyState.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/plotPathbyState.R", echo=TRUE)
#path + map
coords <- cbind(lon_list,lat_list)
m <- coords %>%
leaflet(  ) %>%
addTiles() %>%
addPolylines(color = 'purple', weight=2)
m
source("~/Documents/Code/garmin_wrapped/Analysis/R/convert_and_parse_Fit.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/convert_and_parse_Fit.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/elevationGain_demo.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/plotPathbyState.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/plotPathbyState.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/plotPathbyState.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/elevationGain_demo.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/elevationGain_demo.R", echo=TRUE)
count
smoothed_elevation <- ggplot(all_smooth, aes(x =time/60))+
geom_line(aes(y=no_win, color = "None"), size=1)+
geom_text(aes(x=40, y= 215 + 500, label = 'Estimated Elevation Gain:'), color = 'black')+
geom_text(aes(x=40,y=200  + 500, label = no_win_str, color='None'), show.legend=FALSE)+
geom_text(aes(x=40,y=185 + 500, label = win10_str, color='10s'), show.legend=FALSE)+
geom_text(aes(x=40,y=170 + 500, label = win40_str, color='40s'), show.legend=FALSE)+
geom_text(aes(x=40,y=155 + 500, label = win80_str, color='80s'), show.legend=FALSE)+
geom_line(aes(y=win10, color = "10s"), size=1)+
geom_line(aes(y=win40, color = "40s"), size=1)+
geom_line(aes(y=win80, color = "80s"), size=1)+
scale_color_manual(name = "Window Size", values = c("None" = "gray80", "10s" = "gray70", "40s" = "cornflowerblue", "80s" = "orchid"),breaks = c("None", "10s",  "40s","80s"))+
labs(title = "Window Size Comparison",
x = "Time (min)",
y = "Elevation (ft)")+
theme_pubr()
smoothed_elevation
setwd(fig_dir)
save_plot_as_png(smoothed_elevation,file_name = 'elevation_compare_time.png', width = 10, height = 6,dpi = 300)
i
source("~/Documents/Code/garmin_wrapped/Analysis/R/plotPathbyState.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
biomechs$mean_pace
biomechs
biomechs$Pace
test <- as.data.frame(biomechs)
#Correlation Plots to see how biomechanics/gait measures correlate with heart rate and other things
r_m <- cor(as.data.frame(biomechs), use="complete.obs", method = "pearson");
#plot correlation matrix/clustering
png(height=800, width=800, file="biomech_nosig.png", type = "cairo")
corr_plot_noSig = corrplot(r_m,order='hclust',tl.cex = 2,cl.cex=1.5);
dev.off()
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
biomechs
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
res1
corr_plot_Sig = corrplot(r_m,order='hclust',p.mat=res1$p,tl.cex = 2,cl.cex=1.5);
res1$p
r_m
res1$p
#Correlation Plots to see how biomechanics/gait measures correlate with heart rate and other things
r_m <- cor(as.data.frame(biomechs), use="complete.obs", method = "pearson");
res1 <- cor.mtest(biomechs, conf.level = 0.95, na.action = "na.exclude");
#plot correlation matrix/clustering
png(height=800, width=800, file="biomech_nosig.png", type = "cairo")
corr_plot_noSig = corrplot(r_m,order='hclust',tl.cex = 2,cl.cex=1.5);
dev.off()
png(height=800, width=800, file="biomech_sig.png", type = "cairo")
corr_plot_Sig = corrplot(r_m,order='hclust',p.mat=res1$p,tl.cex = 2,cl.cex=1.5);
1/NA
res1 <- cor.mtest(biomechs, conf.level = 0.95, na.action = "na.exclude");
#plot correlation matrix/clustering
png(height=800, width=800, file="biomech_nosig.png", type = "cairo")
corr_plot_noSig = corrplot(r_m,order='hclust',tl.cex = 2,cl.cex=1.5);
dev.off()
png(height=800, width=800, file="biomech_sig.png", type = "cairo")
corr_plot_Sig = corrplot(r_m,order='hclust',p.mat=res1$p,tl.cex = 2,cl.cex=1.5);
#Correlation Plots to see how biomechanics/gait measures correlate with heart rate and other things
r_m <- cor(biomechs, use="complete.obs", method = "pearson");
res1 <- cor.mtest(biomechs, conf.level = 0.95, na.action = "na.exclude");
#plot correlation matrix/clustering
png(height=800, width=800, file="biomech_nosig.png", type = "cairo")
corr_plot_noSig = corrplot(r_m,order='hclust',tl.cex = 2,cl.cex=1.5);
dev.off()
png(height=800, width=800, file="biomech_sig.png", type = "cairo")
corr_plot_Sig = corrplot(r_m,order='hclust',p.mat=res1$p,tl.cex = 2,cl.cex=1.5);
#plot correlation matrix/clustering
png(height=800, width=800, file="biomech_nosig.png", type = "cairo")
corr_plot_noSig = corrplot(r_m,order='hclust',tl.cex = 2,cl.cex=1.5);
corr_plot_Sig = corrplot(r_m,order='hclust',tl.cex = 2,cl.cex=1.5);
corr_plot_Sig = corrplot(r_m,p.mat=res1$p,tl.cex = 2,cl.cex=1.5);
res1$p
res1 <- cor.mtest(biomechs, conf.level = 0.95, na.action = "na.exclude");
res1 <- cor.mtest(biomechs, conf.level = 0.95, use="complete.obs", na.action = "na.exclude");
res1
res1 <- cor.mtest(biomechs, conf.level = 0.95, use="pairwise.complete.obs", na.action = "na.exclude");
res1
biomechs$Speed <- as.numeric(1/biomechs$Speed); #converting from pace to miles/min for corr matrix
#Correlation Plots to see how biomechanics/gait measures correlate with heart rate and other things
r_m <- cor(biomechs, use="complete.obs", method = "pearson");
res1 <- cor.mtest(biomechs, conf.level = 0.95, use="pairwise.complete.obs", na.action = "na.exclude");
res1
res1 <- cor.mtest(biomechs, conf.level = 0.95, use="complete.obs", na.action = "na.exclude");
res1
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
res1
biomechs <- select(dataset, c('mean_heart_rate','mean_pace','mean_cadence','mean_elevation','mean_step_length','mean_vertical_ratio','mean_stance_time','mean_vertical_oscillation','mean_power'))
biomechs <- sapply(biomechs, as.numeric)
colnames(biomechs) = c('Heart Rate','Speed','Cadence','Elevation','Step Length','Vertical Ratio','Stance Time','Vertical Oscillation','Power')
biomechs<- as.data.frame(biomechs);
biomechs$Speed <- as.numeric(1/biomechs$Speed); #converting from pace to miles/min for corr matrix
#Correlation Plots to see how biomechanics/gait measures correlate with heart rate and other things
r_m <- cor(biomechs, use="complete.obs", method = "pearson");
res1 <- cor.mtest(biomechs, conf.level = 0.95, use="complete.obs", na.action = "na.exclude");
png(height=800, width=800, file="biomech_sig.png", type = "cairo")
corr_plot_Sig = corrplot(r_m,order='hclust',p.mat=res1$p,tl.cex = 2,cl.cex=1.5);
res1 <- cor.mtest(biomechs, conf.level = 0.95, use="pairwise.complete.obs", na.action = "na.exclude");
res1
biomechs <- select(dataset, c('mean_heart_rate','mean_pace','mean_cadence','mean_elevation','mean_step_length','mean_vertical_ratio','mean_stance_time','mean_vertical_oscillation','mean_power'))
biomechs <- sapply(biomechs, as.numeric)
colnames(biomechs) = c('Heart Rate','Speed','Cadence','Elevation','Step Length','Vertical Ratio','Stance Time','Vertical Oscillation','Power')
biomechs<- as.data.frame(biomechs);
#Correlation Plots to see how biomechanics/gait measures correlate with heart rate and other things
r_m <- cor(biomechs, use="complete.obs", method = "pearson");
res1 <- cor.mtest(biomechs, conf.level = 0.95, use="complete.obs", na.action = "na.exclude");
res1
dataset$Speed = 1/dataset$mean_pace;
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
plot(dataset$Speed,dataset$mean_elevation)
plot(dataset$Speed,dataset$mean_elevation)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
#This was the summary data directly exported from the Activities tab from Garmin Connect
#It's more limited than the meta_data csv we generate here, so I really only used this to compare Total Ascent/Descent
#and crosscheck a few things. Most figures can be generated without this, just make sure you remove any calls to the activities
#dataframe
activity_dir <- "~/Documents/Code/garmin_wrapped/DEMO_Data/Activity_Log_fromGarmin/";
#This is where you want the figures to be saved
fig_dir <- "~/Documents/Code/garmin_wrapped/Figures"
cwd <- getwd();
setwd(data_dir);
dataset <- read.csv('full_meta_df.csv')
setwd(activity_dir);
activities <- read.csv("Activities_to_12_24_23.csv")
activities <- subset(activities, Activity.Type %in% c("Running","Trail Running","Track Running"))
setwd(fig_dir)
dataset$date <- as.Date(dataset$date)
activities$Date <- as.Date(activities$Date)
activities$Total.Ascent <- as.numeric(activities$Total.Ascent)
activities$Total.Descent <- -as.numeric(activities$Total.Descent)
dataset$avg_ft_mi = dataset$total_Ascent3/dataset$distance;
dataset$avg_ft_mi = as.numeric(dataset$avg_ft_mi);
#correcting for the random number apparently specified by garmin for stance_time_balance not present
#guessing this might need to be logged if any running dynamics are logged, but
#when using the 955, no GCT balance can be collected
dataset$mean_stance_time_balance[which(dataset$mean_stance_time_balance>100)]= NA;
#also mean vertical oscillation > .5m is ludicrous, so cleaning up the v osc and ratio
#steplength > 3m is also crazy. This might be from ultimate frisbee activities tracked as runs?
ind_rm <- which(dataset$mean_vertical_oscillation>500);
ind_rm <- c(ind_rm, which(dataset$mean_step_length>3000));
ind_rm <- c(ind_rm, which(dataset$mean_vertical_ratio>20));
dataset$mean_vertical_ratio[ind_rm]= NA;
dataset$mean_vertical_oscillation[ind_rm]= NA;
dataset$mean_step_length[ind_rm]= NA;
biomechs <- select(dataset, c('mean_heart_rate','mean_pace','mean_cadence','mean_elevation','mean_step_length','mean_vertical_ratio','mean_stance_time','mean_vertical_oscillation','mean_power'))
biomechs <- sapply(biomechs, as.numeric)
biomechs$
colnames(biomechs) = c('Heart Rate','Pace','Cadence','Elevation','Step Length','Vertical Ratio','Stance Time','Vertical Oscillation','Power')
biomechs <- select(dataset, c('mean_heart_rate','mean_pace','mean_cadence','mean_elevation','mean_step_length','mean_vertical_ratio','mean_stance_time','mean_vertical_oscillation','mean_power'))
biomechs <- sapply(biomechs, as.numeric)
colnames(biomechs) = c('Heart Rate','Pace','Cadence','Elevation','Step Length','Vertical Ratio','Stance Time','Vertical Oscillation','Power')
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
figure
plot(dataset$mean_heart_rate,dataset$mean_pace)
plot(dataset$mean_heart_rate,1/dataset$mean_pace)
dataset$mean_speed <- 1/dataset$mean_pace;
plot(dataset$mean_speed)
plot(dataset$mean_speed,dataset$mean_heart_rate)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
#Correlation Plots to see how biomechanics/gait measures correlate with heart rate and other things
r_m <- cor(biomechs, use="complete.obs", method = "pearson");
res1 <- cor.mtest(biomechs, conf.level = 0.95, use="complete.obs");
#plot correlation matrix/clustering
png(height=800, width=800, file="biomech_nosig.png", type = "cairo")
corr_plot_noSig = corrplot(r_m,order='hclust',tl.cex = 2,cl.cex=1.5);
dev.off()
png(height=800, width=800, file="biomech_sig.png", type = "cairo")
corr_plot_Sig = corrplot(r_m,order='hclust',p.mat=res1$p,tl.cex = 2,cl.cex=1.5);
dev.off()
#Correlation Plots to see how biomechanics/gait measures correlate with heart rate and other things
r_m <- cor(biomechs, use="pairwise.complete.obs", method = "pearson");
res1 <- cor.mtest(biomechs, conf.level = 0.95, use="pairwise.complete.obs");
#plot correlation matrix/clustering
png(height=800, width=800, file="biomech_nosig.png", type = "cairo")
corr_plot_noSig = corrplot(r_m,order='hclust',tl.cex = 2,cl.cex=1.5);
dev.off()
png(height=800, width=800, file="biomech_sig.png", type = "cairo")
corr_plot_Sig = corrplot(r_m,order='hclust',p.mat=res1$p,tl.cex = 2,cl.cex=1.5);
#Correlation Plots to see how biomechanics/gait measures correlate with heart rate and other things
r_m <- cor(biomechs, use="complete.obs", method = "pearson");
res1 <- cor.mtest(biomechs, conf.level = 0.95, use="complete.obs");
#plot correlation matrix/clustering
png(height=800, width=800, file="biomech_nosig.png", type = "cairo")
corr_plot_noSig = corrplot(r_m,order='hclust',tl.cex = 2,cl.cex=1.5);
dev.off()
png(height=800, width=800, file="biomech_sig.png", type = "cairo")
corr_plot_Sig = corrplot(r_m,order='hclust',p.mat=res1$p,tl.cex = 2,cl.cex=1.5);
dev.off()
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
source("~/Documents/Code/garmin_wrapped/Analysis/R/process_MetaData.R", echo=TRUE)
